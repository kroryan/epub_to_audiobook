#!/usr/bin/env python3
"""
Test script para verificar que los warnings de l√≠mite de caracteres se suprimen correctamente
"""

import os
import sys
import tempfile
import logging
from pathlib import Path

# Agregar el directorio ra√≠z al path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from audiobook_generator.config.general_config import GeneralConfig
from audiobook_generator.core.audio_tags import AudioTags
from audiobook_generator.tts_providers.coqui_tts_provider import CoquiTTSProvider

def test_warnings_suppression():
    """Test que los warnings se suprimen correctamente"""
    print("üß™ Testing warnings suppression for XTTS...")
    
    # Configurar logging para capturar warnings
    logging.basicConfig(level=logging.INFO)
    
    # Crear configuraci√≥n de test usando argparse.Namespace
    import argparse
    args = argparse.Namespace()
    args.coqui_model = "tts_models/multilingual/multi-dataset/xtts_v2"
    args.coqui_speaker = "Ana Florence"
    args.coqui_language = "es"
    args.output_format = "wav"
    args.coqui_device = "cpu"  # Usar CPU para test
    
    config = GeneralConfig(args)
    
    # Texto que tradicionalmente causar√≠a el warning (largo)
    long_text = """
    Hubo un tiempo en que estos bosques eran suyos, y todav√≠a conoc√≠an los lugares secretos de cubiles de bestias y cosas por el estilo.
    Le gustar√≠a conocer todo eso alg√∫n d√≠a, cuando fuera un hombre y pudiera ir a donde le placiera.
    Suspir√≥ y rebull√≥, buscando una postura m√°s c√≥moda contra su roca favorita, y por la fuerza de la costumbre dirigi√≥ la mirada a la inclinada ladera de la pradera para asegurarse de que sus ovejas estaban sanas y salvas.
    Lo estaban. No por primera vez, el huesudo muchacho de nariz aguile√±a ote√≥ hacia el sur, con los ojos entrecerrados.
    Retir√≥ el rebelde cabello, negro como el azabache, con una delgada mano que mantuvo levantada para resguardar los ojos, azulgris√°ceos, e intentar en vano divisar los torreones del lejano y espl√©ndido Athalgard, el coraz√≥n de Hastarl, junto al r√≠o.
    Como siempre, pudo distinguir la tenue neblina azulada que se√±alaba el meandro m√°s pr√≥ximo del Delimbiyr, pero nada m√°s.
    Este texto es suficientemente largo para activar el sistema de chunking y verificar que no aparezcan warnings molestos.
    """ * 3  # Hacer el texto a√∫n m√°s largo
    
    try:
        # Crear provider
        provider = CoquiTTSProvider(config)
        
        # Crear archivo temporal para output
        with tempfile.NamedTemporaryFile(suffix='.wav', delete=False) as tmp_file:
            output_path = tmp_file.name
        
        # Audio tags de prueba
        audio_tags = AudioTags(
            title="Test Chunk",
            author="Test Author",
            genre="Test"
        )
        
        print(f"üìù Procesando texto de {len(long_text)} caracteres...")
        print("üîá Si la configuraci√≥n es correcta, NO deber√≠as ver warnings sobre l√≠mite de caracteres")
        
        # Ejecutar s√≠ntesis (esto normalmente mostrar√≠a warnings)
        provider.text_to_speech(long_text, output_path, audio_tags)
        
        # Verificar que el archivo se cre√≥
        if os.path.exists(output_path):
            file_size = os.path.getsize(output_path)
            print(f"‚úÖ S√≠ntesis completada exitosamente")
            print(f"üìÑ Archivo creado: {output_path}")
            print(f"üìè Tama√±o del archivo: {file_size} bytes")
            
            # Limpiar archivo temporal
            os.unlink(output_path)
            print("üßπ Archivo temporal limpiado")
            
            return True
        else:
            print("‚ùå Error: No se cre√≥ el archivo de audio")
            return False
            
    except ImportError as e:
        print(f"‚ö†Ô∏è  TTS package no disponible: {e}")
        print("üí° Instala con: pip install TTS")
        return False
    except Exception as e:
        print(f"‚ùå Error durante la s√≠ntesis: {e}")
        return False

def test_short_text():
    """Test con texto corto para verificar funcionamiento normal"""
    print("\nüß™ Testing short text synthesis...")
    
    import argparse
    args = argparse.Namespace()
    args.coqui_model = "tts_models/multilingual/multi-dataset/xtts_v2"
    args.coqui_speaker = "Ana Florence"
    args.coqui_language = "es"
    args.output_format = "wav"
    args.coqui_device = "cpu"
    
    config = GeneralConfig(args)
    
    short_text = "Hola, esto es una prueba con texto corto."
    
    try:
        provider = CoquiTTSProvider(config)
        
        with tempfile.NamedTemporaryFile(suffix='.wav', delete=False) as tmp_file:
            output_path = tmp_file.name
        
        audio_tags = AudioTags(
            title="Test Short",
            author="Test Author",
            genre="Test"
        )
        
        print(f"üìù Procesando texto corto de {len(short_text)} caracteres...")
        
        provider.text_to_speech(short_text, output_path, audio_tags)
        
        if os.path.exists(output_path):
            print("‚úÖ S√≠ntesis de texto corto completada exitosamente")
            os.unlink(output_path)
            return True
        else:
            print("‚ùå Error: No se cre√≥ el archivo de audio para texto corto")
            return False
            
    except Exception as e:
        print(f"‚ùå Error durante s√≠ntesis de texto corto: {e}")
        return False

if __name__ == "__main__":
    print("üéØ Test de Supresi√≥n de Warnings para Coqui TTS")
    print("=" * 50)
    
    success = True
    
    # Test 1: Texto largo (deber√≠a usar chunking sin warnings)
    if not test_warnings_suppression():
        success = False
    
    # Test 2: Texto corto (deber√≠a funcionar normalmente)
    if not test_short_text():
        success = False
    
    print("\n" + "=" * 50)
    if success:
        print("üéâ Todos los tests pasaron correctamente!")
        print("üîá Los warnings de l√≠mite de caracteres est√°n suprimidos")
        print("‚ú® El sistema de chunking funciona sin interrupciones")
    else:
        print("‚ùå Algunos tests fallaron")
        print("üí° Verifica la configuraci√≥n de TTS y los modelos")
    
    print("\nüìã Resumen de mejoras implementadas:")
    print("   ‚Ä¢ Supresi√≥n de warnings de l√≠mite de caracteres")
    print("   ‚Ä¢ Supresi√≥n de warnings de torchaudio")
    print("   ‚Ä¢ Uso de enable_text_splitting nativo de XTTS")
    print("   ‚Ä¢ Chunking mejorado para textos largos")
    print("   ‚Ä¢ Supresi√≥n temporal durante procesamiento de chunks")